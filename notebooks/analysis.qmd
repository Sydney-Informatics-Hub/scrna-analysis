---
title: "scRNA Analysis - 04 - Integrated Dataset Analysis"
author: "Sydney Informatics Hub"
format: html
---

This notebook is designed to run downstream analyses on an integrated Seurat dataset. This includes automatic and (optionally) manual cell type annotation, cell cycle annotation, differential gene expression analysis, and pathway analysis.

## Imports

While working through this notebook manually, you will need to run the following block of code to import all the necessary R libraries and helper functions:

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Seurat)
library(scuttle)
library(SingleR)
source("R/helpers.R")
source("R/shinyapps.R")
```

## Read in dataset

```{r inputs}
dataset <- "outputs/integrated_dataset.filtered_clustered.doublets_detected.integrated.Rds"

# Load data
integrated <- readRDS(dataset)
```

## Annotation 1: Cell Cycle

Cell cycle annotation is a common step, particularly for cancer data sets.

```{r cell_cycle_scoring}
gene2ens <- integrated@assays$RNA@meta.data
s.genes.ens <- gene2ens$gene_versions[match(cc.genes$s.genes, gene2ens$gene_symbols)]
s.genes.ens <- s.genes.ens[!is.na(s.genes.ens)]
g2m.genes.ens <- gene2ens$gene_versions[match(cc.genes$g2m.genes, gene2ens$gene_symbols)]
g2m.genes.ens <- g2m.genes.ens[!is.na(g2m.genes.ens)]

integrated <- CellCycleScoring(
  integrated,
  s.features = s.genes.ens,
  g2m.features = g2m.genes.ens
)
```

### Plot cell cycle annotations

```{r plot_cell_cycle_scoring}
DimPlot(integrated, reduction = "umap", group.by = "Phase")
```

## Annotation 2: Automatic cell type assignment with HPCA

This step will assign cell types to each cell using the `SingleR` and `celldex` packages and the HPCA database.

```{r annotate_cell_types_hpca}
cluster_res <- scan("data/integrated_cluster_resolution.txt", numeric())
cluster_name <- paste0("SCT_snn_res.", cluster_res)
Idents(integrated) <- cluster_name

ref <- celldex::HumanPrimaryCellAtlasData()

sce <- as.SingleCellExperiment(integrated, assay = "RNA")
sceM <- logNormCounts(sce)

# Map Ensembl IDs to gene IDs
ens2gene <- AnnotationDbi::mapIds(
  EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86,
  keys = rownames(sce),
  column = "SYMBOL",
  keytype = "GENEID"
)
stopifnot(all(rownames(sceM) == names(ens2gene)))
keep <- !is.na(ens2gene)
ens2gene <- ens2gene[keep]
sceM <- sceM[keep,]
rownames(sceM) <- ens2gene

predicted <- SingleR(test = sceM, ref = ref, labels = ref$label.main)
keep <- table(predicted$labels) > 10  # NOTE: Should we change this?
integrated$SingleR.hpca_main <- ifelse(keep[predicted$labels], predicted$labels, "Other")

rm(sce, sceM, ens2gene, keep, predicted, ref)
```

### Plot cell type assignment

```{r plot_cell_types_hpca}
DimPlot(
  integrated,
  reduction = "umap",
  group.by = c(cluster_name, "SingleR.hpca_main"),
  label = TRUE,
  repel = TRUE,
  label.box = TRUE
)
```

### Print table of cluster assignments

```{r print_cluster_assignments}
integrated@meta.data %>%
  dplyr::select(any_of(cluster_name), SingleR.hpca_main) %>%
  group_by(.data[[cluster_name]], SingleR.hpca_main) %>%
  summarise(n_cells = n()) %>%
  pivot_wider(names_from = cluster_name, values_from = n_cells)
```

## Annotation 3: Manual cluster-level annotation with curated gene lists

## Write data to file

```{r save_data, eval = FALSE}
dir.create("outputs")
SaveSeuratRds(integrated, "outputs/integrated_dataset.filtered_clustered.doublets_detected.integrated.analysed.Rds")
```
